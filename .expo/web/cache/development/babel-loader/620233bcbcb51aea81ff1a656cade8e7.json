{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Seller\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listings = _useState2[0],\n      setListings = _useState2[1];\n\n  useEffect(function () {\n    loadListings();\n  }, []);\n\n  var loadListings = function loadListings() {\n    var response;\n    return _regeneratorRuntime.async(function loadListings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(listingsApi.getListings());\n\n          case 2:\n            response = _context.sent;\n            setListings(response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: listings,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subTitle: \"$\" + item.price,\n        imageUrl: item.images[0].url,\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["C:/Users/jonat/Seller/app/screens/ListingsScreen.js"],"names":["React","Card","colors","listingsApi","routes","Screen","useState","useEffect","ListingsScreen","navigation","listings","setListings","loadListings","getListings","response","data","styles","screen","listing","id","toString","item","title","price","images","url","navigate","LISTING_DETAILS","StyleSheet","create","padding","backgroundColor","light"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAENH,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,MAE/BI,QAF+B;AAAA,MAErBC,WAFqB;;AAItCJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIT,WAAW,CAACU,WAAZ,EADJ;;AAAA;AACbC,YAAAA,QADa;AAEnBH,YAAAA,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAMA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,QADR;AAEE,IAAA,YAAY,EAAE,sBAACQ,OAAD;AAAA,aAAaA,OAAO,CAACC,EAAR,CAAWC,QAAX,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,QAAA,QAAQ,EAAE,MAAMD,IAAI,CAACE,KAFvB;AAGE,QAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,GAH3B;AAIE,QAAA,OAAO,EAAG;AAAA,iBAAMhB,UAAU,CAACiB,QAAX,CAAoBtB,MAAM,CAACuB,eAA3B,EAA4CN,IAA5C,CAAN;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD;;AAED,IAAML,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B;AAFlB;AADuB,CAAlB,CAAf;AAOA,eAAexB,cAAf","sourcesContent":["import React from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from '../navigation/routes';\nimport Screen from \"../components/Screen\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction ListingsScreen({ navigation }) {\n\n  const [listings, setListings] = useState([]);\n\n  useEffect(() => {\n    loadListings();\n  },[]);\n  \n  const loadListings = async () => {\n    const response = await listingsApi.getListings();\n    setListings(response.data);\n    \n  }\n\n  return (\n    <Screen style={styles.screen}>\n      <FlatList\n        data={listings}\n        keyExtractor={(listing) => listing.id.toString()}\n        renderItem={({ item }) => (\n          <Card\n            title={item.title}\n            subTitle={\"$\" + item.price}\n            imageUrl={item.images[0].url}\n            onPress={ () => navigation.navigate(routes.LISTING_DETAILS, item)}\n          />\n        )}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n});\n\nexport default ListingsScreen;\n"]},"metadata":{},"sourceType":"module"}