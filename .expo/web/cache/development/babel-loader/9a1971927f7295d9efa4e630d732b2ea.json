{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nexport default useLocation = function useLocation() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, granted, _await$Location$getLa, _await$Location$getLa2, latitude, longitude;\n\n    return _regeneratorRuntime.async(function getLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context.sent;\n            granted = _await$Location$reque.granted;\n\n            if (granted) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Location.getLastKnownPositionAsync());\n\n          case 9:\n            _await$Location$getLa = _context.sent;\n            _await$Location$getLa2 = _await$Location$getLa.coords;\n            latitude = _await$Location$getLa2.latitude;\n            longitude = _await$Location$getLa2.longitude;\n            setLocation({\n              latitude: latitude,\n              longitude: longitude\n            });\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getLocation();\n  }, []);\n  return location;\n};","map":{"version":3,"sources":["C:/Users/jonat/Seller/app/hooks/useLocation.js"],"names":["useEffect","useState","Location","useLocation","location","setLocation","getLocation","requestPermissionsAsync","granted","getLastKnownPositionAsync","coords","latitude","longitude","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAeC,WAAW,GAAG,uBAAM;AAAA,kBACCF,QAAQ,EADT;AAAA;AAAA,MACxBG,QADwB;AAAA,MACdC,WADc;;AAG/B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcJ,QAAQ,CAACK,uBAAT,EAFd;;AAAA;AAAA;AAEJC,YAAAA,OAFI,yBAEJA,OAFI;;AAAA,gBAGRA,OAHQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAMFN,QAAQ,CAACO,yBAAT,EANE;;AAAA;AAAA;AAAA,2DAKRC,MALQ;AAKCC,YAAAA,QALD,0BAKCA,QALD;AAKWC,YAAAA,SALX,0BAKWA,SALX;AAOZP,YAAAA,WAAW,CAAC;AAACM,cAAAA,QAAQ,EAARA,QAAD;AAAWC,cAAAA,SAAS,EAATA;AAAX,aAAD,CAAX;AAPY;AAAA;;AAAA;AAAA;AAAA;AASZC,YAAAA,OAAO,CAACC,GAAR;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAaFd,EAAAA,SAAS,CAAE,YAAM;AACfM,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOF,QAAP;AACD,CArBD","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport * as Location from 'expo-location';\r\n\r\nexport default useLocation = () => {\r\n    const [location, setLocation] = useState();\r\n\r\n    const getLocation = async () => {\r\n        try {\r\n            const { granted } = await Location.requestPermissionsAsync();\r\n            if(!granted) return;\r\n            const { \r\n                coords: {latitude, longitude},\r\n            } = await Location.getLastKnownPositionAsync();\r\n            setLocation({latitude, longitude});    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n  useEffect( () => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}