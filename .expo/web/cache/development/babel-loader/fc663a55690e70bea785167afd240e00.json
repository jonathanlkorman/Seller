{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Seller\\\\app\\\\components\\\\Picker.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Text from \"./Text\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\nimport Screen from \"./Screen\";\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var icon = _ref.icon,\n      items = _ref.items,\n      _ref$numberOfColumns = _ref.numberOfColumns,\n      numberOfColumns = _ref$numberOfColumns === void 0 ? 1 : _ref$numberOfColumns,\n      onSelectItem = _ref.onSelectItem,\n      _ref$PickerItemCompon = _ref.PickerItemComponent,\n      PickerItemComponent = _ref$PickerItemCompon === void 0 ? PickerItem : _ref$PickerItemCompon,\n      placeholder = _ref.placeholder,\n      selectedItem = _ref.selectedItem,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.container, {\n      width: width\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 20,\n    color: defaultStyles.colors.medium,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), selectedItem ? React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, selectedItem.label) : React.createElement(Text, {\n    style: styles.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, placeholder), React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-down\",\n    size: 20,\n    color: defaultStyles.colors.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    numColumns: numberOfColumns,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PickerItemComponent, {\n        item: item,\n        label: item.label,\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  placeholder: {\n    color: defaultStyles.colors.medium,\n    flex: 1\n  },\n  text: {\n    flex: 1\n  }\n});\nexport default AppPicker;","map":{"version":3,"sources":["C:/Users/jonat/Seller/app/components/Picker.js"],"names":["React","useState","MaterialCommunityIcons","Text","defaultStyles","PickerItem","Screen","AppPicker","icon","items","numberOfColumns","onSelectItem","PickerItemComponent","placeholder","selectedItem","width","modalVisible","setModalVisible","styles","container","colors","medium","text","label","item","value","toString","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","padding","marginVertical","marginRight","color","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  FlatList,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport Text from \"./Text\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\nimport Screen from \"./Screen\";\n\nfunction AppPicker({\n  icon,\n  items,\n  numberOfColumns = 1,\n  onSelectItem,\n  PickerItemComponent = PickerItem,\n  placeholder,\n  selectedItem,\n  width = \"100%\",\n}) {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\n        <View style={[styles.container, { width }]}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={defaultStyles.colors.medium}\n              style={styles.icon}\n            />\n          )}\n          {selectedItem ? (\n            <Text style={styles.text}>{selectedItem.label}</Text>\n          ) : (\n            <Text style={styles.placeholder}>{placeholder}</Text>\n          )}\n\n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={defaultStyles.colors.medium}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <Screen>\n          <Button title=\"Close\" onPress={() => setModalVisible(false)} />\n          <FlatList\n            data={items}\n            keyExtractor={(item) => item.value.toString()}\n            numColumns={numberOfColumns}\n            renderItem={({ item }) => (\n              <PickerItemComponent\n                item={item}\n                label={item.label}\n                onPress={() => {\n                  setModalVisible(false);\n                  onSelectItem(item);\n                }}\n              />\n            )}\n          />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  placeholder: {\n    color: defaultStyles.colors.medium,\n    flex: 1,\n  },\n  text: {\n    flex: 1,\n  },\n});\n\nexport default AppPicker;\n"]},"metadata":{},"sourceType":"module"}